{"version":3,"sources":["serviceWorker.ts","common/constants/serverRoutes.ts","common/constants/messages.ts","common/components/ErrorBoundary/styles.ts","common/components/ErrorBoundary/ErrorPage.tsx","common/components/ErrorBoundary/index.tsx","common/constants/environment.ts","common/helpers/index.ts","pages/Search/Results/Characters/styles.ts","pages/Search/Results/Characters/index.tsx","pages/Search/Logo/styles.ts","pages/Search/Logo/index.tsx","hooks/useFetch/index.ts","layouts/Pages/Routes/utils.ts","pages/Search/Filters/Characters/styles.ts","pages/Search/Filters/Characters/index.tsx","pages/Search/Filters/ScenesAndActs/styles.ts","pages/Search/Filters/ScenesAndActs/index.tsx","pages/Search/Filters/Works/styles.ts","pages/Search/Filters/Works/index.tsx","pages/Search/Filters/styles.ts","pages/Search/Filters/index.tsx","common/components/Card/styles.ts","common/components/Card/index.tsx","pages/Search/Results/Paragraphs/styles.ts","pages/Search/Results/Paragraphs/index.tsx","common/buttons/ButtonDiv/index.tsx","common/icons/close.svg","common/icons/search.svg","common/forms/inputs/Search/styles.ts","common/forms/inputs/Search/index.tsx","pages/Search/Results/Works/styles.ts","pages/Search/Results/Works/index.tsx","hooks/useDidMountEffect/index.ts","pages/Search/styles.ts","pages/Search/index.tsx","hooks/usePrevious/index.tsx","pages/NotFound/styles.ts","pages/NotFound/index.tsx","layouts/Pages/PageContainer/styles.ts","layouts/Pages/PageContainer/index.tsx","common/theme/palette.ts","layouts/Pages/Wrapper/styles.ts","layouts/Pages/Wrapper/index.tsx","layouts/Pages/index.tsx","common/theme/index.tsx","common/theme/components.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","ServerRoutes","unregister","navigator","serviceWorker","ready","console","error","message","messages","useStyles","makeStyles","theme","logo","width","margin","spacing","root","alignItems","background","palette","default","display","flexDirection","fontStyle","typography","fontFamily","height","isHeightRelative","justifyContent","ErrorPage","props","classes","className","Typography","variant","ErrorBoundary","state","hasError","errorInfo","log","this","children","_","Component","ENV","serverURL","doNothing","getServerRouteURL","route","removeEmptyValues","obj","omitBy","value","isNil","rowGap","padding","marginBottom","borderColor","border","borderRadius","result","CharacterResults","data","length","map","_source","CharID","CharName","WorkTitles","key","replaceAll","textTransform","fontSize","letterSpacing","textAlign","color","Logo","useFetch","Routes","url","options","cache","useRef","cancelRequest","initialState","loading","undefined","useReducer","action","type","payload","dispatch","useEffect","current","fetch","response","ok","Error","statusText","json","fetchData","maxWidth","CharactersFilter","charId","workId","setCharId","WorkCharacters","characters","d","FormControl","InputLabel","id","Select","autoWidth","labelId","onChange","event","target","MenuItem","character","ScenesAndActsFilter","act","scene","setAct","setScene","Work","SectionCount","ChapterCount","chaptersRange","range","sectionsRange","sectionNumber","selected","chapterNumber","WorksFilter","setWorkId","Works","works","work","WorkID","Title","title","filters","columnGap","ParagraphFilters","content","fontWeight","CardInner","isLoading","titleClassName","clsx","Divider","Card","Paper","in","pagination","marginTop","paragraph","whiteSpace","paragraphNumber","ParagraphResults","total","page","setPage","cleanString","str","replace","pages","rowsPerPage","Math","ceil","getPagesCount","_id","WorkTitle","Section","Chapter","ParagraphNum","PlainText","Pagination","count","defaultPage","ButtonDiv","dataCy","onClick","data-cy","onKeyDown","role","tabIndex","shapeSVGBackgroundCSS","svg","shapeBefore","bottom","position","top","clearInput","CloseIcon","cursor","right","input","paper","shape","text","secondary","paddingLeft","paddingRight","SearchIcon","left","minWidth","SearchInput","React","forwardRef","ref","inputClassName","onClearValue","onChangeCallback","placeholder","inputProps","useState","inputValue","setInputValue","WorkResults","Date","useDidMountEffect","func","deps","didMount","marginLeft","marginRight","paddingTop","paddingBottom","Search","currentQueryStrings","parse","search","q","setQ","Number","previousWorkId","usePrevious","query","URLSearchParams","toString","searchUrl","updateURL","origin","pathname","history","replaceState","setUrlQuery","hits","paragraphs","bud","primary","main","icon","statusCode","images","label","sample","array","floor","random","NotFound","useLocation","aria-label","PageContainer","Colors","routes","name","path","getPath","component","PagesWrapper","Pages","colorList","White","common","white","grey","100","200","300","50","contrastText","dark","light","LightGrey","LightWhite","success","PrimaryTextColor","SecondaryTextColor","warning","createTheme","components","MuiCssBaseline","styleOverrides","body","lineHeight","Theme","ThemeProvider","App","basename","StyledEngineProvider","injectFirst","LocalizationProvider","dateAdapter","DateAdapter","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.2ad2ba38.chunk.js","sourcesContent":["/* eslint-disable sonarjs/cognitive-complexity */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { logToConsole } from \"@utils/logging\";\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)){3}$/),\n);\n\ninterface IConfig {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport const register = function (config?: IConfig): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', async () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        await navigator.serviceWorker.ready;\n\n        logToConsole(\n          'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n        );\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nconst registerValidSW = async function (swUrl: string, config?: IConfig): Promise<void> {\n  try {\n    const registration = await navigator.serviceWorker.register(swUrl);\n\n    registration.onupdatefound = (): void => {\n      const { installing: installingWorker } = registration;\n\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = (): void => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            logToConsole(\n              'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            logToConsole('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  } catch (error) {\n    console.error('Error during service worker registration:', error);\n  }\n};\n\nconst checkValidServiceWorker = async function (swUrl: string, config?: IConfig): Promise<void> {\n  try {\n    // Check if the service worker can be found. If it can't reload the page.\n    const response = await fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    });\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n\n    if (response.status === 404 || (contentType != null && !contentType.includes('javascript'))) {\n      // No service worker found. Probably a different app. Reload the page.\n      const registration = await navigator.serviceWorker.ready;\n\n      await registration.unregister();\n      window.location.reload();\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  } catch {\n    logToConsole('No internet connection found. App is running in offline mode.');\n  }\n};\n\nexport const unregister = async function (): Promise<void> {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.ready;\n\n      registration.unregister();\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n};\n","export enum ServerRoutes {\n  Search = `/search`,\n  Work = `/work`,\n  Works = `/works`,\n  WorkCharacters = `/works/characters`,\n}\n","const messages = {\n    errorBoundary: \"Something ain't right here...\",\n};\n\nexport { messages };","import { Theme } from '@mui/material/styles/createTheme';\nimport { makeStyles } from '@mui/styles';\n\nimport { IErrorPageProps } from './ErrorPage';\n\nexport const useStyles = makeStyles<Theme, IErrorPageProps>((theme) => ({\n  logo: {\n    width: '20%',\n  },\n  message: {\n    margin: theme.spacing(5),\n  },\n  root: {\n    alignItems: 'center',\n    background: theme.palette.background.default,\n    display: 'flex',\n    flexDirection: 'column',\n    fontStyle: `${theme.typography.fontFamily} !important`,\n    height: ({ isHeightRelative }) => (isHeightRelative ? '100%' : '100vh'),\n    justifyContent: 'center',\n    width: '100%',\n  },\n}));\n","import React from 'react';\n\nimport { Typography } from '@mui/material';\n\nimport { messages } from '@common/constants/messages';\n\nimport { useStyles } from './styles';\n\nexport interface IErrorPageProps {\n  isHeightRelative?: boolean;\n}\n\nexport const ErrorPage: React.FC<IErrorPageProps> = (props) => {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant={'h5'} className={classes.message}>\n        {messages.errorBoundary}\n      </Typography>\n    </div>\n  );\n};\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\n\nimport { ErrorPage } from './ErrorPage';\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public state: ErrorBoundaryState = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(_: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.log('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return <ErrorPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","const BASE_URL = \"http://localhost:3001\";\nconst PRODUCTION_URL = \"https://shakesearch-app.herokuapp.com\";\n\nexport const ENV = {\n  serverURL: process.env.NODE_ENV === \"production\" ? PRODUCTION_URL : BASE_URL,\n};\n","import { ENV } from \"@common/constants/environment\";\nimport { ServerRoutes } from \"@common/constants/serverRoutes\";\nimport _ from \"lodash\";\nimport { parse } from \"query-string\";\n\nexport const doNothing = () => null;\n\nexport const getCurrentQueryStrings = () => {\n  return parse(location.search) as Record<string, string>;\n};\n\n/**\n * Sets the current URL to a given location.\n *\n * @param location string.\n */\nexport const setUrl = (url: string) => {\n  window.history.replaceState({}, `Shakesearch`, url);\n};\n\n/**\n * Sets the current URL to a given location without causing a page reload.\n *\n * @param location string.\n */\nexport const setUrlQuery = (query: string) => {\n  const {\n    location: { origin, pathname },\n  } = window;\n  window.history.replaceState(\n    {},\n    `Shakesearch`,\n    `${origin}${pathname}?${query}`\n  );\n};\n\n/**\n * Sets the value of field in the current URL query with causing a page reload.\n *\n * @param field string.\n * @param value string.\n */\nexport const setUrlQueryPart = (field: string, value: string) => {\n  const {\n    location: { origin, pathname, href },\n  } = window;\n  const url = new URL(href);\n  url.searchParams.set(field, value);\n  window.history.replaceState({}, `Shakesearch`, url.href);\n};\n\n/**\n * Gets the value of field in the current URL query.\n *\n * @param field string.\n */\nexport const getUrlQueryPart = (field: string) => {\n  const {\n    location: { href },\n  } = window;\n  const url = new URL(href);\n  return url.searchParams.get(field);\n};\n\n/**\n * Shape a route relative to the server URL.\n *\n * @param route string.\n */\nexport const getServerRouteURL = (route: ServerRoutes) => {\n  return `${ENV.serverURL}${route}`;\n};\n\n/**\n * Remove empty values from an object.\n *\n * @param obj The object you want to remove empty values from.\n * @returns obj\n */\nexport const removeEmptyValues = (obj: Record<string, unknown>) => {\n  const newValues = _.omitBy(obj, (value) => {\n    return _.isNil(value) || !value;\n  });\n\n  return newValues;\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    rowGap: \"10px\",\n    flexDirection: \"column\",\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(4),\n    borderColor: \"silver\",\n    border: \"solid 1px\",\n    borderRadius: \"4px\",\n  },\n  result: {},\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\n\nexport interface ICharacterResults {\n  data?: any[];\n}\n\nexport const CharacterResults: React.FC<ICharacterResults> = ({\n  data = [],\n}) => {\n  const classes = useStyles();\n\n  if (!data.length) {\n    return <div></div>;\n  }\n\n  return (\n    <div className={classes.root}>\n      <strong>Characters found:</strong>\n      {data?.map(({ _source: { CharID, CharName, WorkTitles } }) => {\n        return (\n          <div className={classes.result} key={CharID}>\n            {CharName} in {WorkTitles.replaceAll(\",\", \", \")}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    textTransform: \"uppercase\",\n    fontFamily: \"'Inter'\",\n    fontSize: \"36px\",\n    letterSpacing: \"16px\",\n    textAlign: \"center\",\n    padding: \"36px\",\n    color: \"darkgray\",\n  },\n});\n","import React from \"react\";\n\nimport { useStyles } from \"./styles\";\n\n/**\n * App logo\n */\nexport const Logo: React.FC = () => {\n  const classes = useStyles();\n\n  return <div className={classes.root}>Shakesearch ⚡️</div>;\n};\n","import { useEffect, useReducer, useRef } from 'react'\n\ninterface State<T> {\n  data?: T\n  error?: Error\n  loading: boolean\n}\n\ntype Cache<T> = { [url: string]: T }\n\n// discriminated union type\ntype Action<T> =\n  | { type: 'loading' }\n  | { type: 'fetched'; payload: T }\n  | { type: 'error'; payload: Error }\n\n\n/**\n * Borrowed from https://usehooks-ts.com/react-hook/use-fetch.\n */ \nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({})\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false)\n\n  const initialState: State<T> = {\n    loading: false,\n    error: undefined,\n    data: undefined,\n  }\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case 'loading':\n        return { ...initialState, loading: true }\n      case 'fetched':\n        return { ...initialState, data: action.payload, loading: false }\n      case 'error':\n        return { ...initialState, error: action.payload, loading: false }\n      default:\n        return state\n    }\n  }\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState)\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) return\n\n    cancelRequest.current = false\n\n    const fetchData = async () => {\n      dispatch({ type: 'loading' })\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: 'fetched', payload: cache.current[url] })\n        return\n      }\n\n      try {\n        const response = await fetch(url, options)\n        if (!response.ok) {\n          throw new Error(response.statusText)\n        }\n\n        const data = (await response.json()) as T\n        cache.current[url] = data\n        if (cancelRequest.current) return\n\n        dispatch({ type: 'fetched', payload: data })\n      } catch (error) {\n        if (cancelRequest.current) return\n\n        dispatch({ type: 'error', payload: error as Error })\n      }\n    }\n\n    void fetchData()\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url])\n\n  return state\n}\n\nexport default useFetch\n","\nimport { Search } from '@pages/Search';\n\nimport { TRoutes } from './types';\n\nexport enum Routes {\n    search = 'search',\n}\n\nexport const routes: TRoutes = {\n    search: {\n        name: 'Search',\n        path: '/',\n        getPath: () => '/',\n        component: Search,\n    },\n};","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: \"250px\",\n  },\n});\n","import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\n\nimport { IFormData } from \"../..\";\nimport React from \"react\";\nimport { ServerRoutes } from \"@common/constants/serverRoutes\";\nimport { TSetterFunction } from \"..\";\nimport { getServerRouteURL } from \"@common/helpers\";\nimport useFetch from \"@hooks/useFetch\";\nimport { useStyles } from \"./styles\";\n\ninterface ICharactersFilterProps extends Pick<IFormData, \"workId\" | \"charId\"> {\n  setCharId: TSetterFunction;\n}\n\n/**\n * Characters filter.\n */\nexport const CharactersFilter: React.FC<ICharactersFilterProps> = ({\n  charId,\n  workId,\n  setCharId,\n}) => {\n  const classes = useStyles();\n\n  const url = getServerRouteURL(ServerRoutes.WorkCharacters);\n  const { data = [], error, loading } = useFetch(`${url}?workId=${workId}`);\n\n  const characters = data.map((d) => d._source);\n\n  const labelId = \"charId-label\";\n\n  return (\n    <FormControl className={classes.root}>\n      <InputLabel id={labelId}>Character</InputLabel>\n      <Select\n        autoWidth\n        labelId={labelId}\n        value={charId}\n        onChange={(event) => {\n          setCharId(event.target.value);\n        }}\n      >\n        <MenuItem value=\"\">*</MenuItem>\n        {characters.map((character) => (\n          <MenuItem key={character.CharID} value={character.CharID}>\n            {character.CharName}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: \"250px\",\n  },\n});\n","import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\n\nimport { IFormData } from \"../..\";\nimport React from \"react\";\nimport { ServerRoutes } from \"@common/constants/serverRoutes\";\nimport { TSetterFunction } from \"..\";\nimport _ from \"lodash\";\nimport { getServerRouteURL } from \"@common/helpers\";\nimport useFetch from \"@hooks/useFetch\";\nimport { useStyles } from \"./styles\";\n\ninterface IScenesAndActsFilterProps\n  extends Pick<IFormData, \"workId\" | \"act\" | \"scene\"> {\n  setAct: TSetterFunction;\n  setScene: TSetterFunction;\n}\n\n/**\n * Scenes and acts filters.\n */\nexport const ScenesAndActsFilter: React.FC<IScenesAndActsFilterProps> = ({\n  workId,\n  act,\n  scene,\n  setAct,\n  setScene,\n}) => {\n  const classes = useStyles();\n\n  const url = getServerRouteURL(ServerRoutes.Work);\n  const {\n    data = { _source: {} },\n    error,\n    loading,\n  } = useFetch(`${url}?workId=${workId}`);\n\n  const { SectionCount = 0, ChapterCount = 0 } = data._source;\n\n  const actlabelId = \"actId-label\";\n  const scenelabelId = \"sceneId-label\";\n\n  const chaptersRange = ChapterCount ? _.range(1, ChapterCount + 1) : [];\n  const sectionsRange = SectionCount ? _.range(1, SectionCount + 1) : [];\n\n  return (\n    <>\n      <FormControl className={classes.root}>\n        <InputLabel id={actlabelId}>Act</InputLabel>\n        <Select\n          autoWidth\n          labelId={actlabelId}\n          value={act}\n          onChange={(event) => {\n            setAct(event.target.value);\n          }}\n        >\n          <MenuItem value=\"\">*</MenuItem>\n          {sectionsRange.map((sectionNumber) => (\n            <MenuItem\n              key={sectionNumber}\n              value={sectionNumber}\n              selected={act === sectionNumber}\n            >\n              {sectionNumber}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.root}>\n        <InputLabel id={scenelabelId}>Scene</InputLabel>\n        <Select\n          autoWidth\n          labelId={scenelabelId}\n          value={scene}\n          onChange={(event) => {\n            setScene(event.target.value);\n          }}\n        >\n          <MenuItem value=\"\">*</MenuItem>\n          {chaptersRange.map((chapterNumber) => (\n            <MenuItem\n              key={chapterNumber}\n              value={chapterNumber}\n              selected={act === chapterNumber}\n            >\n              {chapterNumber}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: \"250px\",\n  },\n});\n","import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\n\nimport { IFormData } from \"../..\";\nimport React from \"react\";\nimport { ServerRoutes } from \"@common/constants/serverRoutes\";\nimport { UseFormRegister } from \"react-hook-form\";\nimport { getServerRouteURL } from \"@common/helpers\";\nimport useFetch from \"@hooks/useFetch\";\nimport { useStyles } from \"./styles\";\n\ninterface IWorksFiltersProps {\n  value: IFormData[\"workId\"];\n  setWorkId: (wordId: string) => void;\n}\n\n/**\n * Works filter.\n */\nexport const WorksFilter: React.FC<IWorksFiltersProps> = ({\n  value,\n  setWorkId,\n}) => {\n  const classes = useStyles();\n\n  const url = getServerRouteURL(ServerRoutes.Works);\n\n  const { data = [], error, loading } = useFetch(url);\n\n  const works = data.map((d) => d._source);\n\n  const labelId = \"workId-label\";\n\n  return (\n    <FormControl className={classes.root}>\n      <InputLabel id={labelId}>Work</InputLabel>\n      <Select\n        autoWidth\n        labelId={labelId}\n        value={value}\n        onChange={(event) => {\n          setWorkId(event.target.value);\n        }}\n      >\n        <MenuItem value=\"\">*</MenuItem>\n        {works.map((work) => (\n          <MenuItem key={work.WorkID} value={work.WorkID}>\n            {work.Title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  title: {\n    marginBottom: \"20px\",\n  },\n  filters: {\n    columnGap: \"10px\",\n    display: \"flex\",\n    marginBottom: \"32px\",\n    width: \"100%\",\n  },\n});\n","import { CharactersFilter } from \"./Characters\";\nimport { IFormData } from \"..\";\nimport React from \"react\";\nimport { ScenesAndActsFilter } from \"./ScenesAndActs\";\nimport { WorksFilter } from \"./Works\";\nimport { useStyles } from \"./styles\";\n\nexport type TSetterFunction = (value: string) => void;\n\ninterface IFiltersProps extends IFormData {\n  setQ: TSetterFunction;\n  setWorkId: TSetterFunction;\n  setCharId: TSetterFunction;\n  setAct: TSetterFunction;\n  setScene: TSetterFunction;\n}\n\n/**\n * Paragraph filters.\n */\nexport const ParagraphFilters: React.FC<IFiltersProps> = ({\n  act,\n  charId,\n  scene,\n  workId,\n  setAct,\n  setCharId,\n  setScene,\n  setWorkId,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>Paragraph filters</div>\n      <div className={classes.filters}>\n        <WorksFilter value={workId} setWorkId={setWorkId} />\n\n        {workId && (\n          <>\n            <CharactersFilter\n              workId={workId}\n              charId={charId}\n              setCharId={setCharId}\n            />\n\n            <ScenesAndActsFilter\n              workId={workId}\n              act={act}\n              scene={scene}\n              setAct={setAct}\n              setScene={setScene}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(2),\n  },\n  title: {\n    fontSize: \"15px\",\n    fontWeight: 400,\n    padding: theme.spacing(2),\n  },\n}));\n","import React, { FunctionComponent, ReactNode } from \"react\";\n\nimport { Divider, Paper } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nimport { useStyles } from \"./styles\";\n\nexport interface ICard {\n  className?: string;\n  isLoading?: boolean;\n  title?: string | ReactNode;\n  titleClassName?: string;\n}\n\nexport const CardInner: FunctionComponent<ICard> = ({\n  title,\n  isLoading = false,\n  children,\n  titleClassName,\n}) => {\n  const classes = useStyles();\n\n  if (isLoading) {\n    return <div>Loading..</div>;\n  }\n\n  return (\n    <>\n      {title && (\n        <>\n          <div className={clsx([classes.title, titleClassName])}>{title}</div>\n          <Divider />\n        </>\n      )}\n      <div className={classes.content}>{children}</div>\n    </>\n  );\n};\n\nexport const Card: FunctionComponent<ICard> = (props) => (\n  <Paper className={props.className}>\n    <CardInner {...props} />\n  </Paper>\n);\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  content: {\n    display: \"flex\",\n    columnGap: \"10px\",\n  },\n  character: {\n    color: \"brown\",\n  },\n  in: {\n    margin: \"4px\",\n  },\n  work: {\n    color: \"rosybrown\",\n  },\n  pagination: {\n    margin: \"auto\",\n    marginTop: \"32px\",\n  },\n  paragraph: {\n    whiteSpace: \"pre-line\",\n  },\n  paragraphNumber: {\n    color: \"silver\",\n    whiteSpace: \"pre-line\",\n  },\n  result: {\n    borderColor: \"silver\",\n    border: \"solid 1px\",\n    borderRadius: \"4px\",\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    rowGap: \"10px\",\n  },\n}));\n","import { Card } from \"@common/components/Card\";\nimport { Pagination } from \"@mui/material\";\nimport React from \"react\";\nimport { useStyles } from \"./styles\";\n\nexport interface IParagraphResults {\n  data?: any[];\n  total?: number;\n  isLoading?: boolean;\n  page?: number;\n  setPage?: (page: number) => void;\n}\n\nconst getPagesCount = (total: number, rowsPerPage: number = 10) => {\n  return Math.ceil(total / rowsPerPage);\n};\n\nexport const ParagraphResults: React.FC<IParagraphResults> = ({\n  data = [],\n  total = 0,\n  isLoading,\n  page,\n  setPage = (page: number) => {},\n}) => {\n  const classes = useStyles();\n\n  if (isLoading) {\n    return <div>Loading..</div>;\n  }\n\n  if (data.length === 0) {\n    return <div>No paragraph results.</div>;\n  }\n\n  const cleanString = (str: string) => {\n    return str && str.replace(/\\[p\\]/g, \"\");\n  };\n\n  const pages = getPagesCount(total);\n\n  return (\n    <div className={classes.root}>\n      <div>Results found: {total}</div>\n\n      {data?.map(({ _id, _source }) => {\n        return (\n          <Card\n            className={classes.result}\n            key={_id}\n            title={\n              <div>\n                <span className={classes.character}>\n                  {cleanString(_source.CharName)}\n                </span>\n                <span className={classes.in}>in</span>\n                <span className={classes.work}>\n                  {cleanString(_source.WorkTitle)}, Act {_source.Section} Scene{\" \"}\n                  {_source.Chapter}\n                </span>\n              </div>\n            }\n          >\n            <div className={classes.content}>\n              <div className={classes.paragraphNumber}>\n                {_source.ParagraphNum}\n              </div>\n              <div className={classes.paragraph}>\n                {cleanString(_source.PlainText)}\n              </div>\n            </div>\n          </Card>\n        );\n      })}\n\n      <Pagination\n        className={classes.pagination}\n        count={pages}\n        defaultPage={page}\n        onChange={(_, page) => {\n          setPage(page);\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { doNothing } from '@common/helpers';\nimport { ITestableFC } from '@common/types';\n\ninterface IButtonDivProps extends ITestableFC {\n  className?: string;\n  onClick?: React.MouseEventHandler<HTMLInputElement>;\n}\n\nexport const ButtonDiv: React.FC<IButtonDivProps> = ({ children, className, dataCy, onClick }) => (\n  <div\n    className={className}\n    data-cy={dataCy}\n    onClick={onClick}\n    onKeyDown={doNothing}\n    role={'button'}\n    tabIndex={0}\n  >\n    {children}\n  </div>\n);\n","export default __webpack_public_path__ + \"static/media/close.20ce81e8.svg\";","export default __webpack_public_path__ + \"static/media/search.0c19462f.svg\";","import makeStyles from '@mui/styles/makeStyles';\n\nimport CloseIcon from '@common/icons/close.svg';\nimport SearchIcon from '@common/icons/search.svg';\n\nexport const shapeSVGBackgroundCSS = (svg: string) => `url(${svg}) center / contain no-repeat`;\n\nconst shapeBefore = (svg: string) => ({\n  background: shapeSVGBackgroundCSS(svg),\n  bottom: '0',\n  content: '\"\"',\n  height: '11px',\n  position: 'absolute',\n  top: '14px',\n  width: '11px',\n});\n\nexport const useStyles = makeStyles((theme) => ({\n  clearInput: {\n    '&:before': {\n      ...shapeBefore(CloseIcon),\n      cursor: 'pointer',\n      right: '10px',\n    },\n  },\n  input: {\n    background: theme.palette.background.paper,\n    border: 'none',\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.secondary,\n    padding: '10px',\n    paddingLeft: '28px',\n    paddingRight: '28px',\n    width: '100%',\n  },\n  root: {\n    '&:before': {\n      ...shapeBefore(SearchIcon),\n      left: '10px',\n    },\n    display: 'flex',\n    minWidth: '220px',\n    position: 'relative',\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\n\nimport { ButtonDiv } from \"@common/buttons/ButtonDiv\";\n\nimport { useStyles } from \"./styles\";\nimport { doNothing } from \"@common/helpers\";\nimport clsx from \"clsx\";\n\nexport interface ISearchInputProps {\n  inputClassName?: string;\n  onClearValue: () => void;\n  onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>;\n  placeholder?: string;\n  value: string;\n  onChange?: (value: string) => void;\n  inputProps?: any;\n}\n\n/**\n * SearchInput with div container.\n */\nexport const SearchInput = React.forwardRef<HTMLDivElement, ISearchInputProps>(\n  (\n    {\n      inputClassName,\n      onClearValue,\n      onChange: onChangeCallback = doNothing,\n      onKeyDown,\n      placeholder = \"search\",\n      value,\n      inputProps = {},\n    },\n    ref\n  ) => {\n    const classes = useStyles();\n\n    const [inputValue, setInputValue] = useState(value);\n\n    const onChange: React.ChangeEventHandler<HTMLInputElement> = ({\n      target: { value },\n    }) => {\n      setInputValue(value);\n      onChangeCallback(value);\n    };\n\n    const onCloseIconClick: React.MouseEventHandler<HTMLInputElement> = () => {\n      setInputValue(\"\");\n      onClearValue();\n    };\n\n    useEffect(() => {\n      setInputValue(value);\n    }, [value]);\n\n    return (\n      <div className={classes.root} ref={ref}>\n        <input\n          className={clsx([classes.input, inputClassName])}\n          value={inputValue}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          placeholder={placeholder}\n          {...inputProps}\n        />\n        {value && (\n          <ButtonDiv\n            className={classes.clearInput}\n            onClick={onCloseIconClick}\n          />\n        )}\n      </div>\n    );\n  }\n);\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    rowGap: \"10px\",\n    flexDirection: \"column\",\n    borderColor: \"silver\",\n    border: \"solid 1px\",\n    borderRadius: \"4px\",\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(4),\n  },\n  result: {},\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\n\nexport interface IWorkResults {\n  data?: any[];\n}\n\nexport const WorkResults: React.FC<IWorkResults> = ({ data = [] }) => {\n  const classes = useStyles();\n\n  if (!data.length) {\n    return <div></div>;\n  }\n\n  return (\n    <div className={classes.root}>\n      <strong>Works found:</strong>\n      {data?.map(({ _source: { WorkID, Title, Date } }) => {\n        return (\n          <div className={classes.result} key={WorkID}>\n            {Title}: {Date}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\nconst useDidMountEffect = (func, deps) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) func();\n    else didMount.current = true;\n  }, deps);\n};\n\nexport default useDidMountEffect;\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"100px\",\n    paddingBottom: \"100px\",\n    width: \"100%\",\n    maxWidth: \"700px\",\n  },\n  input: {\n    border: \"solid 2px indianred\",\n    marginBottom: \"20px\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport {\n  getCurrentQueryStrings,\n  getServerRouteURL,\n  removeEmptyValues,\n  setUrlQuery,\n} from \"@common/helpers\";\n\nimport { CharacterResults } from \"./Results/Characters\";\nimport { Logo } from \"./Logo\";\nimport { ParagraphFilters } from \"./Filters\";\nimport { ParagraphResults } from \"./Results/Paragraphs\";\nimport { SearchInput } from \"@common/forms/inputs/Search\";\nimport { ServerRoutes } from \"@common/constants/serverRoutes\";\nimport { WorkResults } from \"./Results/Works\";\nimport _ from \"lodash\";\nimport useDidMountEffect from \"@hooks/useDidMountEffect\";\nimport useFetch from \"@hooks/useFetch\";\nimport { usePrevious } from \"@hooks/usePrevious\";\nimport { useStyles } from \"./styles\";\n\nexport interface IFormData {\n  q: string;\n  workId?: string;\n  charId?: string;\n  act?: number;\n  scene?: number;\n  page?: number;\n}\n\n/**\n * Search\n */\nexport const Search: React.FC = () => {\n  const classes = useStyles();\n\n  // inherit query from the url\n  const currentQueryStrings = getCurrentQueryStrings();\n\n  // q is query\n  const [q, setQ] = useState<string>(currentQueryStrings.q);\n  const [workId, setWorkId] = useState<string>(currentQueryStrings.workId);\n  const [charId, setCharId] = useState<string>(currentQueryStrings.charId);\n  const [act, setAct] = useState<number>(\n    Number(currentQueryStrings.act) ?? null\n  );\n  const [scene, setScene] = useState<number>(\n    Number(currentQueryStrings.scene) ?? null\n  );\n  const [page, setPage] = useState<number>(\n    Number(currentQueryStrings.page) ?? null\n  );\n\n  const previousWorkId = usePrevious(workId);\n  const query = new URLSearchParams(\n    removeEmptyValues({\n      q,\n      workId,\n      charId,\n      act,\n      scene,\n      page,\n    })\n  ).toString();\n\n  const searchUrl = getServerRouteURL(ServerRoutes.Search);\n\n  const url = q ? `${searchUrl}?${query}` : \"\";\n\n  const { data, error, loading } = useFetch(url);\n\n  const resetAllFiltersExceptWorkId = () => {\n    setCharId(\"\");\n    setAct(0);\n    setScene(0);\n    setPage(1);\n  };\n\n  const updateURL = () => {\n    const query = removeEmptyValues({\n      q,\n      workId,\n      charId,\n      act,\n      scene,\n      page,\n    });\n\n    const url = new URLSearchParams(query).toString();\n\n    setUrlQuery(url);\n  };\n\n  useEffect(() => {\n    if (previousWorkId && previousWorkId !== workId) {\n      resetAllFiltersExceptWorkId();\n    }\n\n    updateURL();\n  }, [workId, page, q]);\n\n  // reset to first page character, act, or scene change, except on first load.\n  useDidMountEffect(() => {\n    setPage(1);\n    updateURL();\n  }, [charId, act, scene]);\n\n  return (\n    <div className={classes.root}>\n      <Logo />\n\n      <SearchInput\n        inputClassName={classes.input}\n        onClearValue={() => null}\n        placeholder=\"Search\"\n        onChange={(value) => setQ(value)}\n        value={q}\n      />\n\n      <ParagraphFilters\n        q={q}\n        workId={workId}\n        charId={charId}\n        act={act}\n        scene={scene}\n        setQ={setQ}\n        setWorkId={setWorkId}\n        setCharId={setCharId}\n        setAct={setAct}\n        setScene={setScene}\n      />\n\n      {error ? (\n        <div>Something went wrong..</div>\n      ) : (\n        <>\n          <WorkResults data={data?.works?.hits ?? []} />\n          <CharacterResults data={data?.characters?.hits ?? []} />\n          <ParagraphResults\n            data={data?.paragraphs?.hits ?? []}\n            total={data?.paragraphs?.total ?? 0}\n            isLoading={loading}\n            page={page}\n            setPage={setPage}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const usePrevious = (value: any) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n","import makeStyles from '@mui/styles/makeStyles';\n\nexport const useStyles = makeStyles((theme) => ({\n  bud: {\n    color: theme.palette.primary.main,\n  },\n  icon: {\n    fontSize: theme.spacing(8),\n    textAlign: 'center',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  statusCode: {\n    color: 'rgba(0, 0, 0, 0.16)',\n    display: 'block',\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\n\nimport { useLocation } from 'react-router';\n\nimport { useStyles } from './styles';\n\ninterface IMessage {\n  icon: {\n    images: string[];\n    label: string;\n  };\n  text: string;\n}\n\nconst messages: IMessage[] = [\n  {\n    icon: {\n      images: ['🤷🏻‍♂️', '🤷🏼‍♂️', '🤷🏽‍♂️', '🤷🏾‍♂️', '🤷🏿‍♂️', '🤷🏻‍♀️', '🤷🏼‍♀️', '🤷🏽‍♀️', '🤷🏾‍♀️', '🤷🏿‍♀️'],\n      label: 'shrug',\n    },\n    text: \"can't find this page\",\n  },\n  {\n    icon: {\n      images: ['🛩'],\n      label: 'shrug',\n    },\n    text: \"can't find the runway\",\n  },\n  {\n    icon: {\n      images: ['🤦🏻‍♂️', '🤦🏼‍♂️', '🤦🏽‍♂️', '🤦🏾‍♂️', '🤦🏿‍♂️', '🤦🏻‍♀️', '🤦🏼‍♀️', '🤦🏽‍♀️', '🤦🏾‍♀️', '🤦🏿‍♀️'],\n      label: 'face-palm',\n    },\n    text: 'they broke up with you over text',\n  },\n];\n\nconst sample = function <T>(array: T[]): T {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nexport const NotFound: React.FC = () => {\n  // triggers a message reload between different pages that are not found\n  useLocation();\n\n  const classes = useStyles();\n  const message = sample(messages);\n\n  return (\n    <h1 className={classes.root}>\n      <div>\n        <div className={classes.icon}>\n          <span role=\"img\" aria-label={message.icon.label}>\n            {sample(message.icon.images)}\n          </span>\n        </div>\n\n        <div>\n          <span className={classes.bud}>Sorry bud</span>, {message.text}.\n        </div>\n\n        <div className={classes.statusCode}>404</div>\n      </div>\n    </h1>\n  );\n};\n","import makeStyles from '@mui/styles/makeStyles';\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n}));\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\nexport const PageContainer: React.FC = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{children}</div>;\n};\n","import { PaletteOptions } from '@mui/material/styles';\n\nexport enum Colors {\n  DarkGreen = '#F44336',\n  DarkRed = '#263238',\n  LightGreen = '#FEF0EF',\n  LightRed = '#C7E18F',\n  LightWhite = '#ffffff',\n  PrimaryTextColor = '#263238',\n  White = '#FFFFFF',\n  SecondaryTextColor = '#546E7A',\n  // TODO: Fix this color\n  LightGrey = '#FFFFFF',\n}\n\nexport const palette: PaletteOptions = {\n  background: {\n    default: '#f4f6f8',\n    paper: Colors.White,\n  },\n  common: {\n    white: Colors.White,\n  },\n  grey: {\n    100: '#B2B2B2',\n    200: '#727272',\n    300: '#263238',\n    50: '#E0E0E0',\n  },\n  primary: {\n    contrastText: Colors.White,\n    dark: '#b23823',\n    light: '#ff735b',\n    main: '#FF5033',\n  },\n  secondary: {\n    dark: Colors.LightGrey,\n    light: Colors.LightWhite,\n    main: Colors.White,\n  },\n  success: {\n    main: '#4CAf50',\n  },\n  text: {\n    primary: Colors.PrimaryTextColor,\n    secondary: Colors.SecondaryTextColor,\n  },\n  warning: {\n    main: '#FF9800',\n  },\n};\n\nexport const profileBackgroundColors = [\n  '#FFB69F',\n  '#EB9EC3',\n  '#CDC0FF',\n  '#B4C6FF',\n  '#C7E18F',\n  '#FFE091',\n];\n\nconst getColorBasedForIndex = (colorList: string[]) => (index: number) =>\n  colorList[index % colorList.length];\n\nexport const getProfileColorForIndex = getColorBasedForIndex(profileBackgroundColors);\n","/* eslint-disable max-lines-per-function */\nimport makeStyles from '@mui/styles/makeStyles';\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n  },\n}));\n","import React from \"react\";\n\nimport { useStyles } from \"./styles\";\n\nexport const PagesWrapper: React.FC = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{children}</div>;\n};\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ErrorBoundary from \"@common/components/ErrorBoundary\";\nimport { Search } from \"@pages/Search\";\nimport { NotFound } from \"@pages/NotFound\";\n\nimport { PageContainer } from \"./PageContainer\";\nimport { routes } from \"./Routes/utils\";\nimport { PagesWrapper } from \"./Wrapper\";\n\n/**\n * Returns navigable pages.\n */\nexport const Pages: React.FC = () => {\n  return (\n    <PagesWrapper>\n      <PageContainer>\n        <ErrorBoundary>\n          <Switch>\n            <Route path={routes.search.path}>\n              <Search />\n            </Route>\n\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </ErrorBoundary>\n      </PageContainer>\n    </PagesWrapper>\n  );\n};\n","import React from 'react';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { components } from './components';\nimport { palette } from './palette';\n\nexport const theme = createTheme({\n  components,\n  palette,\n  typography: {\n    fontFamily: \"'Inter', sans-serif\",\n  },\n});\n\nexport const Theme: React.FC = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n","import { Components } from '@mui/material/styles';\n\nexport const components: Components = {\n  MuiCssBaseline: {\n    styleOverrides: {\n      body: {\n        // Returning the font-size to its original size.\n        // https://mui.com/guides/migration-v4/\n        // The body font size has changed from theme.typography.body2 (0.875rem) to theme.typography.body1 (1rem). To return to the previous size, you can override it in the theme.\n        fontSize: '0.875rem',\n        letterSpacing: '0.01071em',\n        lineHeight: 1.43,\n      },\n    },\n  },\n};\n","import * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport ErrorBoundary from \"@common/components/ErrorBoundary\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { Pages } from \"@layouts/Pages\";\nimport React from \"react\";\nimport { StyledEngineProvider } from \"@mui/material/styles\";\nimport { Theme } from \"@common/theme\";\nimport { render } from \"react-dom\";\n\nconst App: React.FC = () => (\n  <BrowserRouter basename=\"/\">\n    <Theme>\n      <StyledEngineProvider injectFirst>\n        <LocalizationProvider dateAdapter={DateAdapter}>\n          <ErrorBoundary>\n            <Pages />\n          </ErrorBoundary>\n        </LocalizationProvider>\n      </StyledEngineProvider>\n    </Theme>\n  </BrowserRouter>\n);\n\n(async () => {\n  render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.querySelector(\"#root\")\n  );\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}