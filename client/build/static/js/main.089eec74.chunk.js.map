{"version":3,"sources":["serviceWorker.ts","common/constants/messages.ts","common/components/ErrorBoundary/styles.ts","common/components/ErrorBoundary/ErrorPage.tsx","common/components/ErrorBoundary/index.tsx","common/helpers/index.ts","common/buttons/ButtonDiv/index.tsx","common/icons/close.svg","common/icons/search.svg","common/forms/inputs/Search/styles.ts","common/forms/inputs/Search/index.tsx","hooks/useFetch/index.ts","layouts/Pages/Routes/utils.ts","common/components/Card/styles.ts","common/components/Card/index.tsx","common/components/Paragraphs/styles.ts","common/components/Paragraphs/index.tsx","pages/Search/styles.ts","pages/Search/Filters/styles.ts","pages/Search/Filters/index.tsx","pages/Search/index.tsx","pages/NotFound/styles.ts","pages/NotFound/index.tsx","layouts/Pages/PageContainer/styles.ts","layouts/Pages/PageContainer/index.tsx","common/theme/palette.ts","layouts/Pages/Wrapper/styles.ts","layouts/Pages/Wrapper/index.tsx","layouts/Pages/index.tsx","common/theme/index.tsx","common/theme/components.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","console","error","message","messages","useStyles","makeStyles","theme","logo","width","margin","spacing","root","alignItems","background","palette","default","display","flexDirection","fontStyle","typography","fontFamily","height","isHeightRelative","justifyContent","ErrorPage","props","classes","className","Typography","variant","ErrorBoundary","state","hasError","errorInfo","log","this","children","_","Component","doNothing","ButtonDiv","dataCy","onClick","data-cy","onKeyDown","role","tabIndex","shapeSVGBackgroundCSS","svg","shapeBefore","bottom","content","position","top","clearInput","CloseIcon","cursor","right","input","paper","border","borderRadius","shape","color","text","secondary","padding","paddingLeft","paddingRight","SearchIcon","left","minWidth","SearchInput","React","forwardRef","ref","inputClassName","onClearValue","onChange","onChangeCallback","placeholder","value","inputProps","useState","inputValue","setInputValue","useEffect","clsx","target","useFetch","Routes","url","options","cache","useRef","cancelRequest","initialState","loading","undefined","data","useReducer","action","type","payload","dispatch","current","fetch","response","ok","Error","statusText","json","fetchData","title","fontSize","fontWeight","CardInner","isLoading","titleClassName","Divider","Card","Paper","classProps","rowGap","result","borderColor","context","character","in","work","paragraph","whiteSpace","ParagraphResults","cleanString","str","replace","map","_source","CharName","WorkTitle","PlainText","marginTop","marginBottom","WorksFilter","register","works","d","workIdRegistrationProps","FormControl","InputLabel","id","Select","autoWidth","labelId","MenuItem","key","WorkID","Title","Filters","values","Search","parse","search","q","workId","charId","act","scene","results","useForm","defaultValues","mode","resolver","joiResolver","Joi","object","string","optional","presence","watch","formState","handleSubmit","getValues","setValue","queryRegistrationProps","watchAllFields","formValues","paragraphs","hits","bud","primary","main","icon","textAlign","statusCode","images","label","sample","array","Math","floor","random","length","NotFound","useLocation","aria-label","PageContainer","Colors","routes","name","path","getPath","component","Wrapper","Pages","colorList","White","common","white","grey","100","200","300","50","contrastText","dark","light","LightGrey","LightWhite","success","PrimaryTextColor","SecondaryTextColor","warning","createTheme","components","MuiCssBaseline","styleOverrides","body","letterSpacing","lineHeight","Theme","ThemeProvider","App","basename","StyledEngineProvider","injectFirst","LocalizationProvider","dateAdapter","DateAdapter","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.089eec74.chunk.js","sourcesContent":["/* eslint-disable sonarjs/cognitive-complexity */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { logToConsole } from \"@utils/logging\";\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)){3}$/),\n);\n\ninterface IConfig {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport const register = function (config?: IConfig): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', async () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        await navigator.serviceWorker.ready;\n\n        logToConsole(\n          'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n        );\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nconst registerValidSW = async function (swUrl: string, config?: IConfig): Promise<void> {\n  try {\n    const registration = await navigator.serviceWorker.register(swUrl);\n\n    registration.onupdatefound = (): void => {\n      const { installing: installingWorker } = registration;\n\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = (): void => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            logToConsole(\n              'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            logToConsole('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  } catch (error) {\n    console.error('Error during service worker registration:', error);\n  }\n};\n\nconst checkValidServiceWorker = async function (swUrl: string, config?: IConfig): Promise<void> {\n  try {\n    // Check if the service worker can be found. If it can't reload the page.\n    const response = await fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    });\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n\n    if (response.status === 404 || (contentType != null && !contentType.includes('javascript'))) {\n      // No service worker found. Probably a different app. Reload the page.\n      const registration = await navigator.serviceWorker.ready;\n\n      await registration.unregister();\n      window.location.reload();\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  } catch {\n    logToConsole('No internet connection found. App is running in offline mode.');\n  }\n};\n\nexport const unregister = async function (): Promise<void> {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.ready;\n\n      registration.unregister();\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n};\n","const messages = {\n    errorBoundary: \"Something ain't right here...\",\n};\n\nexport { messages };","import { Theme } from '@mui/material/styles/createTheme';\nimport { makeStyles } from '@mui/styles';\n\nimport { IErrorPageProps } from './ErrorPage';\n\nexport const useStyles = makeStyles<Theme, IErrorPageProps>((theme) => ({\n  logo: {\n    width: '20%',\n  },\n  message: {\n    margin: theme.spacing(5),\n  },\n  root: {\n    alignItems: 'center',\n    background: theme.palette.background.default,\n    display: 'flex',\n    flexDirection: 'column',\n    fontStyle: `${theme.typography.fontFamily} !important`,\n    height: ({ isHeightRelative }) => (isHeightRelative ? '100%' : '100vh'),\n    justifyContent: 'center',\n    width: '100%',\n  },\n}));\n","import React from 'react';\n\nimport { Typography } from '@mui/material';\n\nimport { messages } from '@common/constants/messages';\n\nimport { useStyles } from './styles';\n\nexport interface IErrorPageProps {\n  isHeightRelative?: boolean;\n}\n\nexport const ErrorPage: React.FC<IErrorPageProps> = (props) => {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant={'h5'} className={classes.message}>\n        {messages.errorBoundary}\n      </Typography>\n    </div>\n  );\n};\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\n\nimport { ErrorPage } from './ErrorPage';\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public state: ErrorBoundaryState = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(_: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.log('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return <ErrorPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { parse } from \"query-string\";\n\nexport const doNothing = () => null;\n\nexport const getCurrentQueryStrings = () => {\n  return parse(location.search);\n};\n\n/**\n * Sets the current URL to a given location.\n *\n * @param location string.\n */\nexport const setUrl = (url: string) => {\n  window.history.replaceState({}, `Shakesearch`, url);\n};\n\n/**\n * Sets the current URL to a given location without causing a page reload.\n *\n * @param location string.\n */\nexport const setUrlQuery = (query: string) => {\n  const {\n    location: { origin, pathname },\n  } = window;\n  window.history.replaceState(\n    {},\n    `Shakesearch`,\n    `${origin}${pathname}?${query}`\n  );\n};\n\n/**\n * Sets the value of field in the current URL query with causing a page reload.\n *\n * @param field string.\n * @param value string.\n */\nexport const setUrlQueryPart = (field: string, value: string) => {\n  const {\n    location: { origin, pathname, href },\n  } = window;\n  const url = new URL(href);\n  url.searchParams.set(field, value);\n  window.history.replaceState({}, `Shakesearch`, url.href);\n};\n","import React from 'react';\n\nimport { doNothing } from '@common/helpers';\nimport { ITestableFC } from '@common/types';\n\ninterface IButtonDivProps extends ITestableFC {\n  className?: string;\n  onClick?: React.MouseEventHandler<HTMLInputElement>;\n}\n\nexport const ButtonDiv: React.FC<IButtonDivProps> = ({ children, className, dataCy, onClick }) => (\n  <div\n    className={className}\n    data-cy={dataCy}\n    onClick={onClick}\n    onKeyDown={doNothing}\n    role={'button'}\n    tabIndex={0}\n  >\n    {children}\n  </div>\n);\n","export default __webpack_public_path__ + \"static/media/close.20ce81e8.svg\";","export default __webpack_public_path__ + \"static/media/search.0c19462f.svg\";","import makeStyles from '@mui/styles/makeStyles';\n\nimport CloseIcon from '@common/icons/close.svg';\nimport SearchIcon from '@common/icons/search.svg';\n\nexport const shapeSVGBackgroundCSS = (svg: string) => `url(${svg}) center / contain no-repeat`;\n\nconst shapeBefore = (svg: string) => ({\n  background: shapeSVGBackgroundCSS(svg),\n  bottom: '0',\n  content: '\"\"',\n  height: '11px',\n  position: 'absolute',\n  top: '14px',\n  width: '11px',\n});\n\nexport const useStyles = makeStyles((theme) => ({\n  clearInput: {\n    '&:before': {\n      ...shapeBefore(CloseIcon),\n      cursor: 'pointer',\n      right: '10px',\n    },\n  },\n  input: {\n    background: theme.palette.background.paper,\n    border: 'none',\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.secondary,\n    padding: '10px',\n    paddingLeft: '28px',\n    paddingRight: '28px',\n    width: '100%',\n  },\n  root: {\n    '&:before': {\n      ...shapeBefore(SearchIcon),\n      left: '10px',\n    },\n    display: 'flex',\n    minWidth: '220px',\n    position: 'relative',\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\n\nimport { ButtonDiv } from \"@common/buttons/ButtonDiv\";\n\nimport { useStyles } from \"./styles\";\nimport { doNothing } from \"@common/helpers\";\nimport clsx from \"clsx\";\n\nexport interface ISearchInputProps {\n  inputClassName?: string;\n  onClearValue: () => void;\n  onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>;\n  placeholder?: string;\n  value: string;\n  onChange?: (value: string) => void;\n  inputProps?: any;\n}\n\n/**\n * SearchInput with div container.\n */\nexport const SearchInput = React.forwardRef<HTMLDivElement, ISearchInputProps>(\n  (\n    {\n      inputClassName,\n      onClearValue,\n      onChange: onChangeCallback = doNothing,\n      onKeyDown,\n      placeholder = \"search\",\n      value,\n      inputProps = {},\n    },\n    ref\n  ) => {\n    const classes = useStyles();\n\n    const [inputValue, setInputValue] = useState(value);\n\n    const onChange: React.ChangeEventHandler<HTMLInputElement> = ({\n      target: { value },\n    }) => {\n      setInputValue(value);\n      onChangeCallback(value);\n    };\n\n    const onCloseIconClick: React.MouseEventHandler<HTMLInputElement> = () => {\n      setInputValue(\"\");\n      onClearValue();\n    };\n\n    useEffect(() => {\n      setInputValue(value);\n    }, [value]);\n\n    return (\n      <div className={classes.root} ref={ref}>\n        <input\n          className={clsx([classes.input, inputClassName])}\n          value={inputValue}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          placeholder={placeholder}\n          {...inputProps}\n        />\n        {value && (\n          <ButtonDiv\n            className={classes.clearInput}\n            onClick={onCloseIconClick}\n          />\n        )}\n      </div>\n    );\n  }\n);\n","import { useEffect, useReducer, useRef } from 'react'\n\ninterface State<T> {\n  data?: T\n  error?: Error\n  loading: boolean\n}\n\ntype Cache<T> = { [url: string]: T }\n\n// discriminated union type\ntype Action<T> =\n  | { type: 'loading' }\n  | { type: 'fetched'; payload: T }\n  | { type: 'error'; payload: Error }\n\n\n/**\n * Borrowed from https://usehooks-ts.com/react-hook/use-fetch.\n */ \nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({})\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false)\n\n  const initialState: State<T> = {\n    loading: false,\n    error: undefined,\n    data: undefined,\n  }\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case 'loading':\n        return { ...initialState, loading: true }\n      case 'fetched':\n        return { ...initialState, data: action.payload, loading: false }\n      case 'error':\n        return { ...initialState, error: action.payload, loading: false }\n      default:\n        return state\n    }\n  }\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState)\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) return\n\n    cancelRequest.current = false\n\n    const fetchData = async () => {\n      dispatch({ type: 'loading' })\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: 'fetched', payload: cache.current[url] })\n        return\n      }\n\n      try {\n        const response = await fetch(url, options)\n        if (!response.ok) {\n          throw new Error(response.statusText)\n        }\n\n        const data = (await response.json()) as T\n        cache.current[url] = data\n        if (cancelRequest.current) return\n\n        dispatch({ type: 'fetched', payload: data })\n      } catch (error) {\n        if (cancelRequest.current) return\n\n        dispatch({ type: 'error', payload: error as Error })\n      }\n    }\n\n    void fetchData()\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url])\n\n  return state\n}\n\nexport default useFetch\n","\nimport { Search } from '@pages/Search';\n\nimport { TRoutes } from './types';\n\nexport enum Routes {\n    search = 'search',\n}\n\nexport const routes: TRoutes = {\n    search: {\n        name: 'Search',\n        path: '/',\n        getPath: () => '/',\n        component: Search,\n    },\n};","import makeStyles from '@mui/styles/makeStyles';\n\nexport const useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  title: {\n    fontSize: '15px',\n    fontWeight: 400,\n    padding: theme.spacing(2),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n}));\n","import React, { FunctionComponent, ReactNode } from \"react\";\n\nimport { Divider, Paper } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nimport { useStyles } from \"./styles\";\n\nexport interface ICard {\n  // TODO: rename to className\n  classProps?: string;\n  isLoading?: boolean;\n  title?: string | ReactNode;\n  titleClassName?: string;\n}\n\nexport const CardInner: FunctionComponent<ICard> = ({\n  title,\n  isLoading = false,\n  children,\n  titleClassName,\n}) => {\n  const classes = useStyles();\n\n  if (isLoading) {\n    return <div>Loading..</div>;\n  }\n\n  return (\n    <>\n      {title && (\n        <>\n          <div className={clsx([classes.title, titleClassName])}>{title}</div>\n          <Divider />\n        </>\n      )}\n      <div className={classes.content}>{children}</div>\n    </>\n  );\n};\n\nexport const Card: FunctionComponent<ICard> = (props) => (\n  <Paper className={props.classProps}>\n    <CardInner {...props} />\n  </Paper>\n);\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    rowGap: \"10px\",\n    flexDirection: \"column\",\n  },\n  result: {\n    borderColor: \"silver\",\n    border: \"solid 1px\",\n    borderRadius: \"4px\",\n    padding: theme.spacing(1),\n  },\n  context: {\n    padding: `0 ${theme.spacing(1)}`,\n  },\n  character: {\n    color: \"brown\",\n  },\n  in: {\n    margin: \"4px\",\n  },\n  work: {\n    color: \"rosybrown\",\n  },\n  paragraph: {\n    padding: theme.spacing(1),\n    whiteSpace: \"pre-line\",\n  },\n}));\n","import React from \"react\";\nimport { Card } from \"../Card\";\n\nimport { useStyles } from \"./styles\";\n\nexport interface IParagraphResults {\n  data?: any[];\n}\n\nexport const ParagraphResults: React.FC<IParagraphResults> = ({ data }) => {\n  const classes = useStyles();\n\n  if (!data) {\n    return <div>No Data</div>;\n  }\n\n  const cleanString = (str: string) => {\n    return str.replace(/\\[p\\]/g, \"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      {data?.map(({ _source }) => {\n        return (\n          <div className={classes.result}>\n            <Card\n              title={\n                <div className={classes.context}>\n                  <span className={classes.character}>\n                    {cleanString(_source.CharName)}\n                  </span>\n                  <span className={classes.in}>in</span>\n                  <span className={classes.work}>\n                    {cleanString(_source.WorkTitle)}\n                  </span>\n                </div>\n              }\n            >\n              <span className={classes.paragraph}>\n                {cleanString(_source.PlainText)}\n              </span>\n            </Card>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    margin: \"auto\",\n    marginTop: \"200px\",\n    width: \"80vw\",\n  },\n  input: {\n    border: \"solid 2px indianred\",\n    marginBottom: \"20px\",\n  },\n});\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    padding: \"10px\",\n  },\n});\n","import { setUrlQueryPart } from \"@common/helpers\";\nimport useFetch from \"@hooks/useFetch\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport React from \"react\";\nimport { UseFormRegister } from \"react-hook-form\";\nimport { IFormData } from \"..\";\nimport { useStyles } from \"./styles\";\n\ninterface IFiltersProps {\n  register: UseFormRegister<IFormData>;\n  values: IFormData;\n}\n\n/**\n * Works filter.\n */\nexport const WorksFilter: React.FC<IFiltersProps> = ({ register }) => {\n  const classes = useStyles();\n\n  const url = `http://localhost:3001/works`;\n  const { data = [], error, loading } = useFetch(url);\n  const works = data.map((d) => d._source);\n\n  console.log(\"works data\", data);\n\n  const workIdRegistrationProps = register(\"workId\");\n\n  const labelId = \"workId-label\";\n\n  return (\n    <FormControl>\n      <InputLabel id={labelId}>Work</InputLabel>\n      <Select autoWidth labelId={labelId} {...workIdRegistrationProps}>\n        {works.map((work) => {\n          return (\n            <MenuItem key={work.WorkID} value={work.WorkID}>\n              {work.Title}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n\n/**\n * Filters\n */\nexport const Filters: React.FC<IFiltersProps> = ({ register, values }) => {\n  const classes = useStyles();\n\n  console.log(\"filter values\", values);\n\n  // const charIdRegistrationProps = register(\"charId\");\n  // const actRegistrationProps = register(\"act\");\n  // const sceneRegistrationProps = register(\"scene\");\n\n  return (\n    <div className={classes.root}>\n      <WorksFilter register={register} />\n      {/* <Select {...charIdRegistrationProps} />\n      <Select {...actRegistrationProps} />\n      <Select {...sceneRegistrationProps} /> */}\n    </div>\n  );\n};\n","import { SearchInput } from \"@common/forms/inputs/Search\";\nimport { joiResolver } from \"@hookform/resolvers/joi\";\nimport useFetch from \"@hooks/useFetch\";\nimport React, { useState } from \"react\";\nimport { getCurrentQueryStrings, setUrlQueryPart } from \"@common/helpers\";\nimport { ParagraphResults } from \"@common/components/Paragraphs\";\nimport { useForm } from \"react-hook-form\";\nimport Joi from \"joi\";\nimport { useStyles } from \"./styles\";\nimport { Filters } from \"./Filters\";\n\nexport interface IFormData {\n  q: string;\n  workId?: string;\n  charId?: string;\n  act?: string;\n  scene?: string;\n}\n\nconst formSchema = () =>\n  Joi.object({\n    q: Joi.string(),\n    workId: Joi.string().optional(),\n    charId: Joi.string().optional(),\n    act: Joi.string().optional(),\n    scene: Joi.string().optional(),\n  }).options({ presence: \"required\" });\n\n/**\n * Search\n */\nexport const Search: React.FC = () => {\n  const classes = useStyles();\n\n  // inherit query from the url\n  const { q = \"\", workId, charId, act, scene } = getCurrentQueryStrings();\n\n  console.log(\"here\");\n\n  const [results, setResults] = useState<{}>([]);\n\n  const { watch, formState, handleSubmit, register, setValue, getValues } =\n    useForm<IFormData>({\n      defaultValues: { q, workId, charId, act, scene },\n      mode: \"onChange\",\n      resolver: joiResolver(formSchema()),\n    });\n\n  const queryRegistrationProps = register(\"q\");\n\n  // watch all fields\n  const watchAllFields = watch();\n  const formValues = getValues();\n\n  const url = `http://localhost:3001/search?q=${q}`;\n\n  console.log(\"getting data\");\n  const { data, error, loading } = useFetch(url);\n\n  console.log(\"data received\", data);\n\n  React.useEffect(() => {\n    // const subscription = watch((value, { name, type }) => console.log(value, name, type));\n    // return () => subscription.unsubscribe();\n    console.log(\"data has changed\", getValues());\n\n    // setResults(data);\n  }, [watchAllFields]);\n\n  console.log(\"form values\", formValues);\n\n  return (\n    <div className={classes.root}>\n      <SearchInput\n        {...queryRegistrationProps}\n        inputClassName={classes.input}\n        onClearValue={() => null}\n        inputProps={queryRegistrationProps}\n        placeholder=\"Search\"\n        value={formValues.q}\n      />\n      <Filters register={register} values={formValues} />\n      <ParagraphResults data={results?.paragraphs?.hits ?? []} />\n    </div>\n  );\n};\n","import makeStyles from '@mui/styles/makeStyles';\n\nexport const useStyles = makeStyles((theme) => ({\n  bud: {\n    color: theme.palette.primary.main,\n  },\n  icon: {\n    fontSize: theme.spacing(8),\n    textAlign: 'center',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  statusCode: {\n    color: 'rgba(0, 0, 0, 0.16)',\n    display: 'block',\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\n\nimport { useLocation } from 'react-router';\n\nimport { useStyles } from './styles';\n\ninterface IMessage {\n  icon: {\n    images: string[];\n    label: string;\n  };\n  text: string;\n}\n\nconst messages: IMessage[] = [\n  {\n    icon: {\n      images: ['🤷🏻‍♂️', '🤷🏼‍♂️', '🤷🏽‍♂️', '🤷🏾‍♂️', '🤷🏿‍♂️', '🤷🏻‍♀️', '🤷🏼‍♀️', '🤷🏽‍♀️', '🤷🏾‍♀️', '🤷🏿‍♀️'],\n      label: 'shrug',\n    },\n    text: \"can't find this page\",\n  },\n  {\n    icon: {\n      images: ['🛩'],\n      label: 'shrug',\n    },\n    text: \"can't find the runway\",\n  },\n  {\n    icon: {\n      images: ['🤦🏻‍♂️', '🤦🏼‍♂️', '🤦🏽‍♂️', '🤦🏾‍♂️', '🤦🏿‍♂️', '🤦🏻‍♀️', '🤦🏼‍♀️', '🤦🏽‍♀️', '🤦🏾‍♀️', '🤦🏿‍♀️'],\n      label: 'face-palm',\n    },\n    text: 'they broke up with you over text',\n  },\n];\n\nconst sample = function <T>(array: T[]): T {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nexport const NotFound: React.FC = () => {\n  // triggers a message reload between different pages that are not found\n  useLocation();\n\n  const classes = useStyles();\n  const message = sample(messages);\n\n  return (\n    <h1 className={classes.root}>\n      <div>\n        <div className={classes.icon}>\n          <span role=\"img\" aria-label={message.icon.label}>\n            {sample(message.icon.images)}\n          </span>\n        </div>\n\n        <div>\n          <span className={classes.bud}>Sorry bud</span>, {message.text}.\n        </div>\n\n        <div className={classes.statusCode}>404</div>\n      </div>\n    </h1>\n  );\n};\n","import makeStyles from '@mui/styles/makeStyles';\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n}));\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\nexport const PageContainer: React.FC = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{children}</div>;\n};\n","import { PaletteOptions } from '@mui/material/styles';\n\nexport enum Colors {\n  DarkGreen = '#F44336',\n  DarkRed = '#263238',\n  LightGreen = '#FEF0EF',\n  LightRed = '#C7E18F',\n  LightWhite = '#ffffff',\n  PrimaryTextColor = '#263238',\n  White = '#FFFFFF',\n  SecondaryTextColor = '#546E7A',\n  // TODO: Fix this color\n  LightGrey = '#FFFFFF',\n}\n\nexport const palette: PaletteOptions = {\n  background: {\n    default: '#f4f6f8',\n    paper: Colors.White,\n  },\n  common: {\n    white: Colors.White,\n  },\n  grey: {\n    100: '#B2B2B2',\n    200: '#727272',\n    300: '#263238',\n    50: '#E0E0E0',\n  },\n  primary: {\n    contrastText: Colors.White,\n    dark: '#b23823',\n    light: '#ff735b',\n    main: '#FF5033',\n  },\n  secondary: {\n    dark: Colors.LightGrey,\n    light: Colors.LightWhite,\n    main: Colors.White,\n  },\n  success: {\n    main: '#4CAf50',\n  },\n  text: {\n    primary: Colors.PrimaryTextColor,\n    secondary: Colors.SecondaryTextColor,\n  },\n  warning: {\n    main: '#FF9800',\n  },\n};\n\nexport const profileBackgroundColors = [\n  '#FFB69F',\n  '#EB9EC3',\n  '#CDC0FF',\n  '#B4C6FF',\n  '#C7E18F',\n  '#FFE091',\n];\n\nconst getColorBasedForIndex = (colorList: string[]) => (index: number) =>\n  colorList[index % colorList.length];\n\nexport const getProfileColorForIndex = getColorBasedForIndex(profileBackgroundColors);\n","/* eslint-disable max-lines-per-function */\nimport makeStyles from '@mui/styles/makeStyles';\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n  },\n}));\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\nexport const Wrapper: React.FC = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{children}</div>;\n};\n","/* eslint-disable max-lines-per-function */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport ErrorBoundary from '@common/components/ErrorBoundary';\nimport { Search } from '@pages/Search';\nimport { NotFound } from '@pages/NotFound';\n\nimport { PageContainer } from './PageContainer';\nimport { routes } from './Routes/utils';\nimport { Wrapper } from './Wrapper';\n\n/**\n * Returns authorized navigation links and pages.\n */\nexport const Pages: React.FC = () => {\n  return (\n    <Wrapper>\n      <PageContainer>\n        <ErrorBoundary>\n          <Switch>\n            <Route path={routes.search.path}>\n              <Search />\n            </Route>\n\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </ErrorBoundary>\n      </PageContainer>\n    </Wrapper>\n  );\n};\n","import React from 'react';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { components } from './components';\nimport { palette } from './palette';\n\nexport const theme = createTheme({\n  components,\n  palette,\n  typography: {\n    fontFamily: \"'Inter', sans-serif\",\n  },\n});\n\nexport const Theme: React.FC = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n","import { Components } from '@mui/material/styles';\n\nexport const components: Components = {\n  MuiCssBaseline: {\n    styleOverrides: {\n      body: {\n        // Returning the font-size to its original size.\n        // https://mui.com/guides/migration-v4/\n        // The body font size has changed from theme.typography.body2 (0.875rem) to theme.typography.body1 (1rem). To return to the previous size, you can override it in the theme.\n        fontSize: '0.875rem',\n        letterSpacing: '0.01071em',\n        lineHeight: 1.43,\n      },\n    },\n  },\n};\n","import * as serviceWorker from \"./serviceWorker\";\n\nimport { BreadcrumbsProvider } from \"@common/providers/breadcrumbsProvider\";\n\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport ErrorBoundary from \"@common/components/ErrorBoundary\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { Pages } from \"@layouts/Pages\";\nimport React from \"react\";\nimport { StyledEngineProvider } from \"@mui/material/styles\";\nimport { Theme } from \"@common/theme\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst App: React.FC = () => (\n  <BrowserRouter basename=\"/\">\n    <Theme>\n      <StyledEngineProvider injectFirst>\n        <LocalizationProvider dateAdapter={DateAdapter}>\n          <ErrorBoundary>\n            <Pages />\n          </ErrorBoundary>\n        </LocalizationProvider>\n      </StyledEngineProvider>\n    </Theme>\n  </BrowserRouter>\n);\n\n(async () => {\n  render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.querySelector(\"#root\")\n  );\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}